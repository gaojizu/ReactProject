{"version":3,"sources":["api/service.js","components/jsx/Hello.jsx","components/jsx/Btn.jsx","components/jsx/Input.jsx","components/jsx/Clock.jsx","components/jsx/CustomTextInput.jsx","components/jsx/Component2.jsx","components/jsx/Component1.jsx","components/jsx/lifecycle.jsx","components/jsx/axiosContentList.jsx","components/jsx/children.jsx","components/jsx/father.jsx","components/common/Rtable/ComTable.jsx","components/jsx/useRtable.jsx","components/common/Rpage/ComPage.jsx","components/jsx/useRpage.jsx","App.js","reportWebVitals.js","index.js"],"names":["console","log","JSON","stringify","process","axiosToken","axios","defaults","timeout","interceptors","request","use","config","headers","common","err","Promise","reject","response","error","isCancel","alert","message","data","HttpRequest","httpUrl","methods","paramsData","Datas","resolve","url","method","undefined","params","then","res","catch","msg","el","React","Component","Clock","props","state","date","Date","timerID","this","setInterval","tick","clearInterval","setState","toLocaleTimeString","Com2","infos","name","age","address","list","map","item","kl","id","Listview","currRow","record","index","visible","currHead","head","onClose","listUrl","dataLists","currLoad","columns","title","dataIndex","key","defaultSortOrder","editable","ellipsis","render","picurl","src","style","width","height","rating","color","orientation","plain","position","cursor","onRow","onClick","onHeaderRow","sticky","loading","bordered","pagination","dataSource","placement","closable","getContainer","getcontentList","ajax","Children","className","content","length","deleteCurrItem","arg","Rtable","getCurrRow","arg1","arg2","doublecurrRow","mousecurrRow","size","showHeader","spinning","onDoubleClick","onMouseEnter","UseRtable","fixed","onCell","maxWidth","overflow","whiteSpace","textOverflow","currCell","Sdate","getFullYear","company","SNum","Rpage","onChange","page","pageSize","current","_currPageNo","onShowSizeChange","_currPageSize","total","showSizeChanger","showQuickJumper","hideOnSinglePage","UseRpage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8241686.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { message } from \"antd\";\r\nconsole.log(\"_BASEURL\" + JSON.stringify(process.env));\r\n//终止axios的fun\r\nlet axiosToken = null;\r\nlet baseUrl =\r\n  process.env.REACT_APP_ENV === \"production\"\r\n    ? process.env.REACT_APP_BASE_URL\r\n    : \"https://ku.qingnian8.com\";\r\n\r\n//请求超时时间\r\naxios.defaults.timeout = 10000;\r\n// axios拦截器\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    //设置请求头\r\n    config.headers.common = {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    };\r\n    return config;\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    console.log(process);\r\n    //请求完成token置空\r\n    axiosToken = null;\r\n    return response;\r\n  },\r\n  (error) => {\r\n    //请求完成token置空\r\n    axiosToken = null;\r\n    //提示信息\r\n    if (axios.isCancel(error)) alert(error.message, \"center\");\r\n    else message.error(\"请稍后请求....\");\r\n    return Promise.reject(error.response.data); // 返回接口返回的错误信息\r\n  }\r\n);\r\n/**\r\n * 创建请求\r\n */\r\nclass HttpRequest {\r\n  ajax(httpUrl, methods, paramsData, Datas) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        url: baseUrl + httpUrl,\r\n        method: methods,\r\n        data: Datas ? Datas : undefined,\r\n        params: paramsData ? paramsData : undefined,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n  //终止请求\r\n  doCancelToken(msg = \"取消\") {\r\n    if (axiosToken) axiosToken(msg);\r\n  }\r\n}\r\nexport default new HttpRequest();\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst el = <p>Hello World</p>\nexport default class Hello extends React.Component {\n\trender() {\n\t\treturn el\n\t}\n}\n","import React from 'react'\nexport default class Btn extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tNum: 0,\n\t\t\tresult: 0\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button onClick={() => this.Addcount()}>点击</button>\n\t\t\t\t<br />\n\t\t\t\t<span>{this.state.result}</span>\n\t\t\t</div>\n\t\t)\n\t}\n\tAddcount = () => {\n\t\tthis.setState({\n\t\t\tNum: this.state.Num + 1,\n\t\t\tresult: this.state.Num\n\t\t}, () => {\n\t\t\tconsole.log(this.state.Num)\n\t\t})\n\t}\n}","import React from 'react'\nclass Input extends React.Component {\n\tconstructor() {\n\t\tconsole.log('执行构造器...');\n\t\tsuper()\n\t\tthis.myRef = React.createRef();\n\t\tthis.state = {\n\t\t\tval: '',\n\t\t\tdefaultObj: {\n\t\t\t\tuser: 'jim',\n\t\t\t\tage: 25,\n\t\t\t\taddress: 'HZ_CN'\n\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tconsole.log('Did mount');\n\t}\n\tcomponentDidUpdate() {\n\t\tconsole.log('Did update');\n\t\tconsole.log('最新的值:' + this.state.val);\n\t}\n\tcomponentWillUnmount() {\n\t\tconsole.log('unmount');\n\t}\n\trender() {\n\t\tconsole.log('开始渲染');\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<input onChange={() => this.changeVal()} ref={this.myRef}></input>\n\t\t\t\t<br />\n\t\t\t\t<span>{this.state.val}</span>\n\t\t\t</div>\n\t\t)\n\t}\n\tchangeVal = (e) => {\n\t\tthis.setState({\n\t\t\tval: this.myRef.current.value\n\t\t}, () => {\n\t\t\t//console.info(this.state.val)\n\t\t})\n\t}\n}\n\nexport default Input","import React from 'react'\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            date: new Date(), //当前时间\n            timerID: '',//计时器\n        }\n    }\n    componentDidMount() {\n        this.timerID = setInterval(() => {\n            this.tick()\n        }, 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID)\n    }\n    tick() {\n        this.setState({\n            date: new Date()\n        })\n    }\n    render() {\n        return (\n            <div>\n                <h3>当前时间：{this.state.date.toLocaleTimeString()}</h3>\n            </div>\n        )\n    }\n}\nexport default Clock","import React from 'react'\nclass CustomTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n    this.focusTextInput = this.focusTextInput.bind(this);\n  }\n\n  focusTextInput() {\n    this.textInput.current.focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          ref={this.textInput} />\n        <input\n          type=\"button\"\n          value=\"Focus the text input\"\n          onClick={this.focusTextInput}\n        />\n      </div>\n    );\n  }\n}\nexport default CustomTextInput","import React from 'react'\nclass Com2 extends React.Component {\n    constructor(props) {\n        super()\n        console.log(props);\n        this.state = {\n            infos: {}\n        }\n    }\n    render() {\n        return (\n            <div>\n                <span>\n                    {this.props.name} - {this.props.age} - {this.props.address}\n                </span>\n                <ul>\n                    {this.props.list.map(item => <li key={item.id}>{item.kl}</li>)}\n                </ul>\n            </div>\n        )\n    }\n}\nexport default Com2","import React from 'react'\nimport Com2 from './Component2.jsx'\nclass Arg1 extends React.Component {\n    constructor() {\n        super()\n        this.currInput = React.createRef()\n        this.state = {\n            user: {\n                name: \"jim\",\n                age: 35,\n                address: \"HZ-CN\"\n            },\n            listArr: [{ kl: 'apple', id: 1 }, { kl: 'huawei', id: 2 }, { kl: 'meizu', id: 3 }, { kl: 'xiaomi', id: 4 }, { kl: 'T', id: 5 }]\n        }\n    }\n    changeVal = () => {\n        console.log(this.state.listArr);\n        // this.setState({\n        //     list: this.state.list.push({ kl: this.currInput.current.value, id: this.state.list.length + 1 })\n        // })\n    }\n    componentDidUpdate() {\n\n    }\n    addList = () => {\n        console.log(this.currInput.current.value);\n        let tempObj = this.state.listArr\n        tempObj.push({ kl: this.currInput.current.value, id: this.state.listArr.length + 1 })\n        this.setState({\n            listArr: tempObj\n        }, () => {\n            console.log(this.state.listArr);\n        })\n    }\n    render() {\n        return (\n            <div>\n                <input onChange={() => this.changeVal()} ref={this.currInput}></input>\n                <br />\n                <button onClick={() => this.addList()}>点击更改当前组件的值</button>\n                <Com2 {...this.state.user} list={this.state.listArr}></Com2>\n            </div>\n        )\n    }\n}\nexport default Arg1","import React from 'react'\nclass LifeCycle extends React.Component {\n    constructor(props) {\n        console.log(\"执行constructor\");\n        super(props)\n        this.state = {\n            testValue: \"this is state\"\n        }\n    }\n    componentWillMount() {\n        console.log(\"componentWillMount...\");\n    }\n    componentDidMount() {\n        //这里是可以进行ajax的请求的\n        console.log(\"componentDidMount...\");\n        //在这里进行值的更新，然后值的更新会导致触发update的生命周期的钩子函数，所以可以在uodate中处理之后的数据，也可以直接在这个函数进行数据的处理\n    }\n    componentWillUnmount() {\n        console.log(\"componentWillUnmount...\");\n    }\n    componentDidUpdate() {\n        console.log(\"componentDidUpdate...\");\n\n    }\n    render() {\n        console.log(\"start render...\");\n        return (\n            <div>\n                <span>hello LifeCycle {this.state.testValue}</span>\n                <br />\n                <button onClick={() => this.changeVal()}>点击改变state的值</button>\n            </div >\n        )\n    }\n    changeVal() {\n        this.setState({\n            testValue: \"this is changed value\"\n        }, () => {\n            console.log(this.state.testValue);\n        })\n    }\n\n}\nexport default LifeCycle","import request from \"../../api/service.js\"\nimport React from \"react\"\nimport {Table,Tag,Image,Card,Divider,Drawer} from 'antd'\nclass Listview extends React.Component{\n\t  constructor(){\n\t\t  super()\n\t\t  this.state={\n\t\t\t  listUrl:\"/wxList.php\",//文章列表\n\t\t\t  dataLists:[],\n\t\t\t  currLoad:false,\n\t\t\t  visible: false,\n\t\t\t  columns:[\n\t\t\t\t  {\n\t\t\t\t      title: 'ID',\n\t\t\t\t      dataIndex: 'id',\n\t\t\t\t      key: 'id',\n\t\t\t\t\t  defaultSortOrder:'descend',\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t      title: '时间戳',\n\t\t\t\t      dataIndex: 'posttime',\n\t\t\t\t      key: 'posttime',\n\t\t\t\t\t  editable:true\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t      title: '标题',\n\t\t\t\t      dataIndex: 'title',\n\t\t\t\t      key: 'title',\n\t\t\t\t\t  ellipsis:true,\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t      title: '图片',\n\t\t\t\t      dataIndex: 'picurl',\n\t\t\t\t      key: 'picurl',\n\t\t\t\t\t  render(picurl){\n\t\t\t\t\t\t  return(\n\t\t\t\t\t\t   <Image  src={picurl} style={{width:'30px', height:'auto'}}/>\n\t\t\t\t\t\t  )\n\t\t\t\t\t  }\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t      title: '标签',\n\t\t\t\t      dataIndex: 'rating',\n\t\t\t\t      key: 'rating',\n\t\t\t\t\t  render(rating){\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t  let color = rating ? 'geekblue':'green'\n\t\t\t\t\t\t\t  let key = rating ? rating : 'BQ'\n\t\t\t\t\t\t\t  return(\n\t\t\t\t\t\t\t\t<Tag color={color} key={key}>\n\t\t\t\t\t\t\t\t {key}\n\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t  }\n\t\t\t\t\t  }\n\t\t\t\t  },\n\t\t\t  ]\n\t\t  }\n\t  }\n\t  render(){\n\t\t  return (\n\t\t  <div>\n\t\t  <Card title=\"点击每一行查看详情\">\n\t\t  <Divider orientation=\"center\" plain>table 数据</Divider>\n\t\t\t<Table \n\t\t\t\n\t\t\t style={{position:'relative', cursor:\"pointer\"}}\n\t\t\t onRow={(record,index) => ({onClick: () => { this.currRow(record,index)}})}\n\t\t\t onHeaderRow={ record=> ({onClick:() =>this.currHead(record)})} \n\t\t\t sticky loading={this.state.currLoad} bordered pagination={false} \n\t\t\t dataSource={this.state.dataLists} \n\t\t\t columns={this.state.columns} />\n\t\t\t <Drawer\n\t\t\t           title=\"Basic Drawer\"\n\t\t\t           placement=\"right\"\n\t\t\t           closable={false}\n\t\t\t           onClose={this.onClose}\n\t\t\t           visible={this.state.visible}\n\t\t\t           getContainer={false}\n\t\t\t           style={{ position: 'absolute' }}\n\t\t\t         >\n\t\t\t           <p>Some contents...</p>\n\t\t\t  </Drawer>\n\t\t  </Card>\n\t\t  </div>\n\t\t  )\n\t  }\n\t  /**\n\t   * @function 当前Table点击每一行的数据\n\t   */\n\t  currRow = (record,index)=>{\n\t\t  this.setState({\n\t\t    visible: true,\n\t\t  });\n\t\t  console.log(record)\n\t\t  console.log(index)\n\t  }\n\t  /**\n\t   * @function 获取表头数据\n\t   */\n\t  currHead = (head)=>{\n\t  \t\t  console.log(head)\n\t  }\n\t  onClose = () => {\n\t      this.setState({\n\t        visible: false,\n\t      });\n\t    };\n\t  //页面挂载开始\n\t  componentWillMount(){\n\t\t  \n\t  }\n\t  //数据请求\n\t  componentDidMount(){\n\t\t  this.getcontentList()\n\t  }\n\t  /**\n\t   * @function 获取到列表信息\n\t   */\n\t  getcontentList(){\n\t\t  this.setState({\n\t\t\t  currLoad : true\n\t\t  }) \n\t\t  request.ajax(this.state.listUrl,'get').then(res=>{\n\t\t\t  this.setState({\n\t\t\t\t  dataLists:res.data\n\t\t\t  },()=>{\n\t\t\t\t  this.setState({\n\t\t\t\t\t  currLoad: this.state.dataLists ? false : true\n\t\t\t\t  })\n\t\t\t\t console.log(this.state.dataLists) \n\t\t\t  })\n\t\t\t  console.log(res)\n\t\t  }).catch(err=>{\n\t\t\t  this.setState({\n\t\t\t\t  currLoad : false\n\t\t\t  })\n\t\t\t  console.log(err)\n\t\t  })\n\t  }\n\t  successFunc(msg){\n\t\t  console.log(msg)\n\t  }\n}\n\nexport default Listview","/**\n * @author Clearlove\n * @aim 示例父子组件传值 - 子组件\n * @date 2021-04-08\n * @implements class extend React.Component\n */\nimport React from 'react'\nimport '../common.css'\nclass Children extends React.Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div>\n                <ul className=\"item-ul\">\n                    {this.props.content.length > 0 ? this.props.content.map((item, index) => <li title={\"删除\" + item} onClick={() => this.deleteCurrItem(index)} key={index}>{item}</li>) : <h2>No Data</h2>}\n                </ul>\n            </div>\n        )\n    }\n    /**\n     * @function deleteCurrItem 根据下标进行删除\n     * @param {*} arg \n     */\n    deleteCurrItem(arg) {\n        //调用父组件中的函数进行执行删除的操作\n        this.props.deleteCurrItem(arg)\n    }\n}\nexport default Children","/**\n * @author Clearlove\n * @aim 示例父子组件传值 - 父组件\n * @date 2021-04-08\n * @implements class extend React.Component\n */\nimport React from 'react'\nimport Children from './children'\nimport '../common.css'\nclass Father extends React.Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props)\n        this.currInput = React.createRef()\n        this.state = {\n            list: []\n        }\n    }\n    render() {\n        return (\n            <div className=\"f-card\">\n                <div className=\"f-content\">\n                    <input className=\"f-input\" ref={this.currInput}></input>\n                    <button className=\"f-btn\" onClick={() => this.addItem()}>添加</button>\n                </div>\n                <div className=\"f-child\">\n                    <Children deleteCurrItem={() => this.deletedItem()} content={this.state.list} />\n                </div>\n            </div>\n        )\n    }\n    /**\n     * @function addItem 点击新加一个项到list中\n     */\n    addItem = () => {\n        let tempArr = this.state.list\n        if (this.currInput.current.value && this.currInput.current.value.length < 10) {\n            if (tempArr.includes(this.currInput.current.value)) {\n                alert(\"请不要输入重复元素！！！\")\n            } else {\n                if (tempArr.length > 9) {\n                    alert(\"最多输入十条数据！！！\")\n                    return false\n                } else {\n                    tempArr.push(this.currInput.current.value)\n                    this.setState({\n                        list: tempArr\n                    })\n                }\n            }\n        } else {\n            alert(\"请输入合适的内容进行添加！！！\")\n        }\n    }\n    /**\n     * @function deletedItem 根据下标进行list数组的删除\n     * @param arg 数组的下标\n     */\n    deletedItem = (arg) => {\n        let temparr = this.state.list\n        temparr.splice(arg, 1)\n        this.setState({\n            list: temparr\n        }, () => {\n            console.log(this.state.list);\n        })\n    }\n}\nexport default Father","import React from \"react\"\nimport { Table, Spin, } from \"antd\"\nclass Rtable extends React.Component {\n\tstate = {}\n\t/**\n\t * @function currRow 单击获取当前行数据\n\t * @param arg1 回调参数，当前行数据\n\t * @param arg2 当前行数\n\t */\n\tgetCurrRow = (arg1, arg2) => {\n\t\t// console.log(arg1)\n\t\t// console.log(arg2)\n\t}\n\t/**\n\t * @function doublecurrRow 双击获取当前行数据\n\t * @param arg1 回调参数，当前行数据\n\t * @param arg2 当前行数\n\t */\n\tdoublecurrRow = (arg1, arg2) => {\n\t\t// console.log(arg1)\n\t\t// console.log(arg2)\n\t}\n\t/**\n\t * @function mousecurrRow 鼠标移入获取当前行数据\n\t * @param arg1 回调参数，当前行数据\n\t * @param arg2 当前行数\n\t */\n\tmousecurrRow = (arg1, arg2) => {\n\t\t// console.log(arg1)\n\t\t// console.log(arg2)\n\t}\n\trender() {\n\t\tlet dataSource = this.props.dataSource //table 源数据\n\t\tlet columns = this.props.columns  //table 列选项\n\t\tlet size = this.props.size ? this.props.size : \"default\" //表格大小\n\t\tlet showHeader = this.props.showHeader ? this.props.showHeader : true //是否显示表格头部信息\n\t\tlet spinning = this.props.spinning ? this.props.spinning : false // 是否显示Loading 默认false\n\t\treturn (\n\t\t\t<Spin spinning={spinning}>\n\t\t\t\t<Table\n\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\tonRow={(record, index) =>\n\t\t\t\t\t\t({\n\t\t\t\t\t\t\tonClick: () => { this.props.getCurrRow(record, index) },\n\t\t\t\t\t\t\tonDoubleClick: () => { this.doublecurrRow(record, index) },\n\t\t\t\t\t\t\tonMouseEnter: () => { this.mousecurrRow(record, index) }\n\t\t\t\t\t\t})}\n\t\t\t\t\tsize={size}\n\t\t\t\t\tpagination={false}\n\t\t\t\t\tshowHeader={showHeader}\n\t\t\t\t\tdataSource={dataSource}\n\t\t\t\t\tcolumns={columns}>\n\t\t\t\t</Table>\n\t\t\t</Spin>\n\t\t)\n\t}\n}\nexport default Rtable","import React from \"react\"\nimport Rtable from \"../../components/common/Rtable/ComTable.jsx\"\nclass UseRtable extends React.Component {\n\tstate = {\n\t\tcolumns: [{\n\t\t\ttitle: \"公司\",\n\t\t\tdataIndex: \"company\",\n\t\t\tkey: \"company\",\n\t\t\tfixed: 'left',\n\t\t}, {\n\t\t\ttitle: \"税号\",\n\t\t\tdataIndex: \"SNum\",\n\t\t\tkey: \"SNum\",\n\t\t\tonCell: (record) => {\n\t\t\t\treturn {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tmaxWidth: 150,\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t\ttextOverflow: 'ellipsis',\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\tcolor: \"red\"\n\t\t\t\t\t},\n\t\t\t\t\tonClick: () => { this.currCell(record) }\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttitle: \"日期\",\n\t\t\tdataIndex: \"Sdate\",\n\t\t\tkey: \"Sdate\",\n\t\t\trender: (Sdate) => {\n\t\t\t\treturn (\n\t\t\t\t\t<span>{new Date().getFullYear()}</span>\n\t\t\t\t)\n\t\t\t}\n\t\t}],\n\t\tdataSource: [{\n\t\t\tcompany: \"A公司\", SNum: \"452019134121234123413454562541353465124282343\", Sdate: \"\"\n\t\t}, {\n\t\t\tcompany: \"B公司\", SNum: \"452076890\", Sdate: \"\"\n\t\t}, {\n\t\t\tcompany: \"C公司\", SNum: \"452012341243\", Sdate: \"\"\n\t\t}]\n\t}\n\tcurrCell = (arg1) => {\n\t\tconsole.log(arg1)\n\t}\n\t/**\n\t * @function getCurrRow 获取到当前行的数据\n\t * @param arg1 回调参数\n\t */\n\tgetCurrRow = (arg1) => {\n\t\tconsole.log(arg1)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Rtable\n\t\t\t\tgetCurrRow={this.getCurrRow}\n\t\t\t\tdataSource={this.state.dataSource}\n\t\t\t\tcolumns={this.state.columns}>\n\t\t\t</Rtable>\n\t\t)\n\t}\n}\nexport default UseRtable","import React from 'react'\nimport { Pagination } from \"antd\"\nclass Rpage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            current: 1,\n            pageSize: this.props.pageSize ? this.props.pageSize : 10\n        }\n    }\n    /**\n     * @function onChange 页码改变\n     * @param page 当前页码\n     * @param pageSize 当前每页显示条数\n     */\n    onChange = (page, pageSize) => {\n        this.setState({\n            current: page,\n            pageSize: pageSize\n        }, () => {\n            this.props._currPageNo(page, pageSize)\n        })\n    }\n    /**\n     * @function onShowSizeChange 每页显示条数改变\n     * @param page 当前页码\n     * @param pageSize 当前每页显示条数\n     */\n    onShowSizeChange = (page, pageSize) => {\n        this.setState({\n            current: page,\n            pageSize: pageSize\n        }, () => {\n            this.props._currPageSize(page, pageSize)\n        })\n    }\n\n    render() {\n        let total = this.props.total ? this.props.total : 100 //总条数\n        let showSizeChanger = this.props.showSizeChanger ? this.props.showSizeChanger : true //改变每页条数\n        let showQuickJumper = this.props.showQuickJumper ? this.props.showQuickJumper : false // 快速跳转\n        let hideOnSinglePage = this.props.hideOnSinglePage ? this.props.hideOnSinglePage : false// 只有一页的时候是不是需要隐藏当前分页\n        let size = this.props.size ? this.props.size : \"default\" //显示分页大小\n        return (\n            <Pagination\n                onChange={this.onChange}\n                onShowSizeChange={this.onShowSizeChange}\n                total={total}\n                showSizeChanger={showSizeChanger}\n                showQuickJumper={showQuickJumper}\n                pageSize={this.state.pageSize}\n                hideOnSinglePage={hideOnSinglePage}\n                size={size}\n            >\n            </Pagination>\n        )\n    }\n}\nexport default Rpage","import React from \"react\"\nimport Rpage from \"../../components/common/Rpage/ComPage.jsx\"\nclass UseRpage extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            total: 100,\n            pageSize: 20,\n        }\n    }\n    _currPageNo = (page, pageSize) => {\n        console.log(page, pageSize);\n    }\n    _currPageSize = (page, pageSize) => {\n        console.log(page, pageSize);\n    }\n    render() {\n        return (\n            <Rpage\n                _currPageNo={this._currPageNo}\n                _currPageSize={this._currPageSize}\n            ></Rpage>\n        )\n    }\n}\nexport default UseRpage","import Hello from \"./components/jsx/Hello.jsx\";\nimport Btn from \"./components/jsx/Btn.jsx\";\nimport Input from \"./components/jsx/Input.jsx\";\nimport CustomTextInput from \"./components/jsx/CustomTextInput.jsx\";\nimport Clock from \"./components/jsx/Clock.jsx\";\nimport Com1 from \"./components/jsx/Component1.jsx\";\nimport Lifecycle from \"./components/jsx/lifecycle.jsx\";\nimport Listview from \"./components/jsx/axiosContentList.jsx\";\nimport Father from \"./components/jsx/father.jsx\";\nimport UseRtable from \"./components/jsx/useRtable.jsx\";\nimport UsePage from \"./components/jsx/useRpage.jsx\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Clock />\n        {/*<Hello />*/}\n        <Listview />\n        <UseRtable />\n        <UsePage />\n        {/*<Btn />\n        <Input />\n        <CustomTextInput />\n        <Com1 />\n        <Lifecycle />\n        <Father />*/}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}